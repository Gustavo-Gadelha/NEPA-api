# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "migrations",
    "uploads",
    "instance",
]

line-length = 120
indent-width = 4
target-version = "py312"

[lint]
select = [
    "E", # pycodestyle errors
    "F", # pyflakes
    "I", # isort
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "S", # flake8-bandit
    "UP", # pyupgrade
    "C4", # flake8-comprehensions
    "TID", # flake8-tidy-imports
    "SIM", # flake8-simplify
    "PL", # pylint
]

ignore = [
    "E402", # false positives for local imports
    "E501", # line too long (we let black/formatter handle it)
    "PLR0915", # too many statements (false positives with handlers.py)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.extend-per-file-ignores]
"app/__init__.py" = [
    "I001", # import order (isort) warnings
]

"__init__.py" = [
    "F401", # unused imports (re-exports)
    "PLC0415", # local variable imported but not used (flake8-pie)
    "F403", # wildcard import used
]

"test_*.py" = [
    "S101", # assert used (allowed in tests)
    "PLC0415", # local variable imported but not used
    "F821", # undefined name (common in mocks or fixtures)
    "D", # missing or incomplete docstrings
]

[format]
# Unlike Black, use single quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"