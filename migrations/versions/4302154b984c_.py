"""empty message

Revision ID: 4302154b984c
Revises: 
Create Date: 2025-04-04 14:58:27.380607

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4302154b984c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usuario',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('matricula', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('senha', sa.String(length=255), nullable=False),
    sa.Column('telefone', sa.String(length=20), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=False),
    sa.Column('autoridade', sa.Enum('ADMIN', 'ALUNO', 'PROFESSOR', name='autoridade'), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telefone')
    )
    with op.batch_alter_table('usuario', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_usuario_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_usuario_matricula'), ['matricula'], unique=True)

    op.create_table('admin',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('curso',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('sigla', sa.String(length=255), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aluno',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('curso_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['curso_id'], ['curso.id'], ),
    sa.ForeignKeyConstraint(['id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('edital',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=False),
    sa.Column('arquivo', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('admin_id', sa.UUID(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('professor',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('curso_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['curso_id'], ['curso.id'], ),
    sa.ForeignKeyConstraint(['id'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projeto',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('titulo', sa.String(length=255), nullable=False),
    sa.Column('sumario', sa.Text(), nullable=False),
    sa.Column('situacao', sa.Enum('FINALIZADO', 'EM_ANDAMENTO', 'APROVADO', 'PENDENTE', 'REJEITADO', 'CANCELADO', name='situacao'), nullable=False),
    sa.Column('titulacao', sa.String(length=255), nullable=False),
    sa.Column('linha_de_pesquisa', sa.String(length=255), nullable=False),
    sa.Column('vagas_ocupadas', sa.Integer(), nullable=False),
    sa.Column('vagas', sa.Integer(), nullable=False),
    sa.Column('palavras_chave', sa.Text(), nullable=False),
    sa.Column('localizacao', sa.String(length=255), nullable=False),
    sa.Column('populacao', sa.String(length=255), nullable=False),
    sa.Column('objetivo_geral', sa.Text(), nullable=False),
    sa.Column('objetivo_especifico', sa.Text(), nullable=False),
    sa.Column('justificativa', sa.Text(), nullable=False),
    sa.Column('metodologia', sa.Text(), nullable=False),
    sa.Column('cronograma_atividades', sa.Text(), nullable=False),
    sa.Column('referencias', sa.Text(), nullable=False),
    sa.Column('aceitou_termos', sa.Boolean(), nullable=False),
    sa.Column('professor_id', sa.UUID(), nullable=False),
    sa.Column('curso_id', sa.UUID(), nullable=False),
    sa.Column('data_limite_edicao', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['curso_id'], ['curso.id'], ),
    sa.ForeignKeyConstraint(['professor_id'], ['professor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aluno_projeto',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('aprovado', sa.Boolean(), nullable=False),
    sa.Column('bolsista', sa.Boolean(), nullable=False),
    sa.Column('aluno_id', sa.UUID(), nullable=False),
    sa.Column('projeto_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['aluno_id'], ['aluno.id'], ),
    sa.ForeignKeyConstraint(['projeto_id'], ['projeto.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aluno_id', 'projeto_id', name='uq_aluno_projeto')
    )
    op.create_table('atividade',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('titulo', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('exibir', sa.Boolean(), nullable=False),
    sa.Column('data_inicio', sa.Date(), nullable=False),
    sa.Column('data_fim', sa.Date(), nullable=False),
    sa.Column('aluno_id', sa.UUID(), nullable=False),
    sa.Column('projeto_id', sa.UUID(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['aluno_id'], ['aluno.id'], ),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['projeto_id'], ['projeto.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aluno_id', 'projeto_id', name='uq_aluno_projeto_atividade')
    )
    op.create_table('controle_mensal',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ano', sa.Integer(), server_default=sa.text('EXTRACT(year FROM now())'), nullable=False),
    sa.Column('mes', sa.Integer(), server_default=sa.text('EXTRACT(month FROM now())'), nullable=False),
    sa.Column('projeto_id', sa.UUID(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['projeto_id'], ['projeto.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relatorio_bolsista',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('tipo_relatorio', sa.Enum('FINAL', 'SEMESTRAL', name='tiporelatorio'), nullable=False),
    sa.Column('tipo_projeto', sa.Enum('PESQUISA', 'EXTENSAO', name='tipoprojeto'), nullable=False),
    sa.Column('atividades_desenvolvidas', sa.Text(), nullable=True),
    sa.Column('dificuldades_encontradas', sa.Text(), nullable=True),
    sa.Column('pontos_positivos', sa.Text(), nullable=True),
    sa.Column('autoavaliacao', sa.Text(), nullable=True),
    sa.Column('projeto_id', sa.UUID(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['projeto_id'], ['projeto.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relatorio_coordenador',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('tipo_relatorio', sa.Enum('FINAL', 'SEMESTRAL', name='tiporelatorio'), nullable=False),
    sa.Column('tipo_projeto', sa.Enum('PESQUISA', 'EXTENSAO', name='tipoprojeto'), nullable=False),
    sa.Column('area_tematica', sa.String(length=255), nullable=False),
    sa.Column('linha_programatica', sa.String(length=255), nullable=True),
    sa.Column('parceiros', sa.String(length=255), nullable=True),
    sa.Column('metas_propostas', sa.Text(), nullable=False),
    sa.Column('participacao_eventos', sa.Text(), nullable=True),
    sa.Column('publico_atendido', sa.Text(), nullable=True),
    sa.Column('resultados_alcancados', sa.Text(), nullable=False),
    sa.Column('projeto_id', sa.UUID(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['projeto_id'], ['projeto.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('anexo',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('titulo', sa.String(length=255), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('arquivo', sa.String(length=255), nullable=False),
    sa.Column('relatorio_projeto_id', sa.UUID(), nullable=True),
    sa.Column('relatorio_bolsista_id', sa.UUID(), nullable=True),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['relatorio_bolsista_id'], ['relatorio_bolsista.id'], ),
    sa.ForeignKeyConstraint(['relatorio_projeto_id'], ['relatorio_coordenador.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('frequencia_semanal',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('realizada_em', sa.Date(), nullable=False),
    sa.Column('tempo_inicio', sa.Time(), nullable=False),
    sa.Column('tempo_termino', sa.Time(), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('observacao', sa.Text(), nullable=True),
    sa.Column('controle_mensal_id', sa.UUID(), nullable=False),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['controle_mensal_id'], ['controle_mensal.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('presenca',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('aluno_id', sa.UUID(), nullable=False),
    sa.Column('frequencia_semanal_id', sa.UUID(), nullable=False),
    sa.Column('presente', sa.Boolean(), nullable=False),
    sa.Column('justificativa', sa.Text(), nullable=True),
    sa.Column('criado_em', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('atualizado_em', sa.DateTime(timezone=True), nullable=True),
    sa.Column('criado_por', sa.UUID(), nullable=True),
    sa.Column('atualizado_por', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['aluno_id'], ['aluno.id'], ),
    sa.ForeignKeyConstraint(['atualizado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['criado_por'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['frequencia_semanal_id'], ['frequencia_semanal.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('aluno_id', 'frequencia_semanal_id', name='uq_aluno_frequencia_semanal')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('presenca')
    op.drop_table('frequencia_semanal')
    op.drop_table('anexo')
    op.drop_table('relatorio_coordenador')
    op.drop_table('relatorio_bolsista')
    op.drop_table('controle_mensal')
    op.drop_table('atividade')
    op.drop_table('aluno_projeto')
    op.drop_table('projeto')
    op.drop_table('professor')
    op.drop_table('edital')
    op.drop_table('aluno')
    op.drop_table('curso')
    op.drop_table('admin')
    with op.batch_alter_table('usuario', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usuario_matricula'))
        batch_op.drop_index(batch_op.f('ix_usuario_email'))

    op.drop_table('usuario')
    # ### end Alembic commands ###
